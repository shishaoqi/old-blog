/*---------------------------------------------
            Container.php
----------------------------------------------*/
#@->1
$app['app'] 
--->
/**
 * Get the value at a given offset.
 *
 * @param  string  $key
 * @return mixed
 */
public function offsetGet($key)
{
    return $this->make($key);
}

$app->app
/**
 * Dynamically access container services.
 *
 * @param  string  $key
 * @return mixed
 */
public function __get($key)
{
    return $this[$key];
    //$this[$key]  turn #@->1
}

/**
 * Get the alias for an abstract if available.
 *
 * @param  string  $abstract
 * @return string
 */
protected function getAlias($abstract)
{
    if (! isset($this->aliases[$abstract])) {
        return $abstract;
    }

    return $this->getAlias($this->aliases[$abstract]);
}



/*---------------------------------------------
            Application.php
----------------------------------------------*/

/**
 * Resolve the given type from the container.
 *
 * (Overriding Container::make)
 *
 * @param  string  $abstract
 * @param  array   $parameters
 * @return mixed
 */
public function make($abstract, array $parameters = [])
{
    $abstract = $this->getAlias($abstract);

    if (isset($this->deferredServices[$abstract])) {
        $this->loadDeferredProvider($abstract);
    }

    return parent::make($abstract, $parameters);
}